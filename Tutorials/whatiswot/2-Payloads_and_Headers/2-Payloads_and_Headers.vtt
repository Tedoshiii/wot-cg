WEBVTT

00:00:00.000 --> 00:00:06.304 
Hello! In this video, we will introduce payloads and headers in detail.

00:00:06.304 --> 00:00:13.949 
Since in the Web of Things, there are smart devices exchanging data via protocols which separate the data into headers

00:00:13.949 --> 00:00:21.594 
and payloads, It is important to understand the difference and how they are relevant for the Web of Things.

00:00:21.602 --> 00:00:29.107 
This is an introductory series that presents technologies and standards relevant to the WoT.

00:00:29.107 --> 00:00:35.682 
If you want to skip directly to the tutorials on the WoT standards, click the link in cards.

00:00:35.921 --> 00:00:39.140 
So lets start with what is a payload?

00:00:39.137 --> 00:00:44.240 
In computing, the payload is the part of transmitted data that is the actual

00:00:44.240 --> 00:00:49.343 
intended message of the application and nothing to do with the protocol itself.

00:00:49.343 --> 00:00:55.931 
It is also called the body of the message. It is not mandatory in most protocols.

00:00:55.931 --> 00:01:03.518 
We can approach with an analogy, where we consider protocols as a truck.

00:01:03.518 --> 00:01:07.677 
and we can think of the parcel contents as the payloads of a protocol,

00:01:07.677 --> 00:01:11.836 
since a payload should not tell what it should be done by itself.

00:01:11.836 --> 00:01:16.479 
The parcel contents also do not contain any information about their

00:01:16.479 --> 00:01:21.123 
destination, the truck being transported, or the color of the truck.

00:01:21.123 --> 00:01:23.925 
Now, let us introduce what is a header.

00:01:23.925 --> 00:01:29.778 
The header is part of a message that can and should be understood by the

00:01:29.778 --> 00:01:35.631 
protocol stack. All the information that the payload should not contain, goes to the header.

00:01:35.631 --> 00:01:43.683 
Let's continue with the parcel truck example. In that example, the header would be the etiquette on the parcel.

00:01:43.683 --> 00:01:50.209 
This is what an HTTP header can look like. A header can contain

00:01:50.209 --> 00:01:56.735 
information like request context, response context, status and it can indicate payload type.

00:01:56.735 --> 00:02:11.035 
There are different payload types such as JSON, XML, CBOR , Text, Audio and Video and more.

00:02:11.035 --> 00:02:14.729 
So let us show you an example of JSON payload.

00:02:14.729 --> 00:02:18.662 
This is a temperature payload, a single number.

00:02:18.662 --> 00:02:21.951 
And this is a configuration payload.

00:02:21.951 --> 00:02:28.717 
It is a JSON object consisting of key value pairs desiredUnit and updateInterval. .

00:02:28.717 --> 00:02:35.101 
The temperature payload is sent from the sensor and the configuration is sent to the sensor.

00:02:35.101 --> 00:02:40.306 
In the next video series, we will talk in detail, about

00:02:40.306 --> 00:02:45.511 
JSON. But first let us explain why is JSON so important?

00:02:45.511 --> 00:02:53.274 
Because JSON is very relevant in the scope of the Web of Things, payloads are preferred mostly in

00:02:53.274 --> 00:03:01.037 
JSON. Also, the core standard Thing Description, as well as many other API and configuration files use JSON.

00:03:01.037 --> 00:03:07.353 
It is light-weight compared to XML and human readable compared to CBOR . You can see

00:03:07.353 --> 00:03:13.670 
the difference in the representation of the same data in JSON, XML, and CBOR .

00:03:13.670 --> 00:03:18.660 
It is well-established and has a schema language called JSON Schema.

00:03:18.660 --> 00:03:23.650 
It can be used to describe and validate JSON data.

00:03:23.650 --> 00:03:29.408 
Here, you can see an example of a TD in JSON format. We will

00:03:29.408 --> 00:03:35.166 
go later into the details of how a TD should be structured and understood.

00:03:35.166 --> 00:03:41.218 
You can proceed to the next tutorial by clicking on the card or the video description.

