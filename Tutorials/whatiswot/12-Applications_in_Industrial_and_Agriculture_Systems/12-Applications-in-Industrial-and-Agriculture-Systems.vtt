WEBVTT

00:00:05.000 --> 00:00:13.266 
The Web of Things finds applications in diverse fields beyond smart homes and cities, with industrial and agriculture systems being

00:00:13.266 --> 00:00:15.661 
two major and complex examples.

00:00:16.139 --> 00:00:19.822 
 Let's first take a look at industrial systems.

00:00:20.295 --> 00:00:31.289 
 Unlike smart home scenarios, industrial applications have broader and more demanding requirements. These include advanced monitoring of complex connected

00:00:31.289 --> 00:00:36.644 
manufacturing equipment, tracking products and predicting possible machine failures.

00:00:37.123 --> 00:00:43.732 
 In factories, for example, devices from multiple manufacturers must work together seamlessly.

00:00:43.732 --> 00:00:54.033 
WoT simplifies this by supporting old and new industrial protocols alike, such as Modbus, Profinet, OPC UA, and MQTT.

00:00:54.033 --> 00:01:01.060 
Each device is described using a Thing Description, which tells other systems exactly how to interact with it.

00:01:01.060 --> 00:01:09.678 
TDs enhance existing workflows by reducing complexity and engineering effort without introducing overhead or security concerns.

00:01:11.445 --> 00:01:19.246 
 TDs also enable a new way to build application logic - whether it's control logic, business logic or mashups

00:01:19.246 --> 00:01:29.997 
- using simple files instead of being locked into proprietary systems. This decouples devices from vendor-specific applications, offering flexibility and

00:01:29.997 --> 00:01:31.777 
long-term maintainability.

00:01:32.249 --> 00:01:40.259 
 With TDs, we can add context to the system by including annotations from domain models, providing more meaning to

00:01:40.259 --> 00:01:42.864 
how devices are used within their environment.

00:01:43.266 --> 00:01:49.620 
 Moving on to another domain-specific application of WoT â€” agriculture systems.

00:01:50.105 --> 00:02:00.437 
 Agriculture offers a wide range of automation possibilities, from monitoring soil moisture and automating watering, to handling fertilization schedules

00:02:00.437 --> 00:02:01.881 
and machinery operation.

00:02:02.342 --> 00:02:11.989 
However, finding a single solution that fits all needs is challenging, especially for small and medium-sized farms. Farm owners often

00:02:11.989 --> 00:02:20.394 
aim to automate just one specific task, like soil monitoring, for example. WoT plays a crucial role as an interoperable

00:02:20.394 --> 00:02:29.531 
interface here, allowing farm owners to integrate only the parts they need without committing to an all-encompassing solution. By enabling

00:02:29.531 --> 00:02:37.785 
flexibility and compatibility across different devices and systems, WoT makes it easier for farms to adopt new solutions at their

00:02:37.785 --> 00:02:39.147 
own pace and budget.

00:02:39.572 --> 00:02:43.975 
 Agriculture systems also come with their own set of constraints.

00:02:43.975 --> 00:02:50.050 
Often, devices in agricultural environments are constrained in terms of power and connectivity.

00:02:50.050 --> 00:02:57.576 
For example, sensors in a cornfield may not have access to power sources or network cables and rely on batteries.

00:02:59.005 --> 00:03:07.607 
This works well with WoT, as metadata can be stored externally and protocols like MQTT let devices send data only

00:03:07.607 --> 00:03:12.232 
when they're online, conserving energy and avoiding unnecessary power drain.

00:03:12.687 --> 00:03:20.074 
 Thus WoT's functionality ensures it is both practical and efficient without adding any unnecessary complexity.

00:03:20.535 --> 00:03:27.365 
 Thanks to the interoperability of WoT, cross-domain collaborations are also made possible.

00:03:27.827 --> 00:03:33.693 
In cross-domain collaborations, each system involves other systems in other domains.

00:03:33.693 --> 00:03:41.692 
For example, a Smart Factory and a Smart City can collaborate on energy grid management, where the city's infrastructure is

00:03:41.692 --> 00:03:44.377 
influenced by the factory's energy usage.

00:03:44.377 --> 00:03:51.509 
As different platforms and protocols can be used in WoT, information can be easily shared across domains.

00:03:52.931 --> 00:03:58.669 
 To summarize, WoT provides numerous advantages across its applications:

00:03:59.143 --> 00:04:04.916 
It is domain-agnostic, allowing for seamless integration across various systems.

00:04:05.406 --> 00:04:12.329 
It supports multiple protocols, ensuring interoperability among devices from different manufacturers.

00:04:12.806 --> 00:04:18.835 
WoT is built on open standards, promoting long-term adaptability and innovation.

00:04:19.290 --> 00:04:23.891 
It works with resource-constrained devices, edge, or the cloud.

00:04:24.322 --> 00:04:33.927 
 By enabling efficient and secure interactions between devices across different domains, WoT serves as a transformative framework.

00:04:34.283 --> 00:04:39.917 
 You can proceed to the next tutorial by clicking on the card or the video description.

